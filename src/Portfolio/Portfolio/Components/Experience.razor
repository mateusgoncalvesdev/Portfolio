@using Portfolio.Data.Mapper
@inject DeviceService DeviceService
@inject IProfessionalExperienceService ProfessionalExperienceService

<RadzenCard class="avoid-break" id="experiencia">
    <RadzenFieldset AllowCollapse="true" ExpandTitle="Experiência Profissional" CollapseTitle="Experiência Profissional">
        <HeaderTemplate>
            <RadzenStack Orientation="Orientation.Horizontal" Gap="0.25rem">
                <SectionTitle Icon="work" Title="Experiência Profissional" />
            </RadzenStack>
        </HeaderTemplate>
        <ChildContent>
            @if (Experiences == null)
            {
                <p><em>Carregando...</em></p>
            }
            else
            {
                @if (DeviceService.IsMobile)
                {
                    <MobileExperiencesList Experiences="Experiences" />
                }
                else
                {
                    <ExperiencesList Experiences="Experiences" />
                }
            }
        </ChildContent>
    </RadzenFieldset>
</RadzenCard>

@code {
    public List<ProfessionalExperienceViewModel> Experiences { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        var experiences = await ProfessionalExperienceService.GetProfessionalExperiencesAsync();
        var experiencesOrdered = experiences.OrderByDescending(x =>
            x.EndDate ?? DateTime.Now);
        Experiences = experiencesOrdered.Select(ProfessionalExperienceMapper.MapToViewModel).ToList();
    }
}