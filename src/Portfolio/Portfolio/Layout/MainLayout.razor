@using Portfolio.Components
@inherits LayoutComponentBase
@inject CookieThemeService CookieThemeService
@inject IPersonalService PersonalService
@inject IJSRuntime JS
@inject DeviceService DeviceService

<HeadContent>
    <RadzenTheme Theme="standard" />
</HeadContent>

<RadzenComponents />

<RadzenLayout style="grid-template-areas: 'rz-sidebar rz-header' 'rz-sidebar rz-body';">
    <RadzenHeader>
        <RadzenRow JustifyContent="JustifyContent.Start" AlignItems="AlignItems.Center" Gap="0">
            <RadzenColumn Size="5">
                <RadzenSidebarToggle Click="@SidebarToggleClick"></RadzenSidebarToggle>
            </RadzenColumn>
            <RadzenColumn Size="7">
                <RadzenStack AlignItems="AlignItems.Center" Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0.5rem" class="rz-px-2">
                    <RadzenAppearanceToggle />
                </RadzenStack>
            </RadzenColumn>
        </RadzenRow>
    </RadzenHeader>
    <RadzenBody Expanded="@sidebarExpanded">
        <RadzenRow class="rz-mx-auto rz-px-4 rz-pt-2 rz-pt-md-4 rz-pt-lg-6 rz-pt-xl-12 rz-pb-2 rz-pb-lg-12" Style="max-width: 1440px;">
            <RadzenColumn Size="12">
                @Body
            </RadzenColumn>
        </RadzenRow>
    </RadzenBody>
    <RadzenSidebar @bind-Expanded="@sidebarExpanded" style="z-index: 2">
        <RadzenStack AlignItems="Radzen.AlignItems.Center" class="rz-py-4 rz-py-lg-6" Style="padding: var(--rz-panel-menu-item-padding); border-bottom: var(--rz-panel-menu-item-border);">
            @if (PersonalInfo == null)
            {
                <p><em>Carregando...</em></p>
            }
            else
            {
                <RadzenText Text="@PersonalInfo.Name.DisplayName" TextStyle="Radzen.Blazor.TextStyle.Subtitle1" class="rz-mb-0" style="color: var(--rz-sidebar-color);" />
                <RadzenText Text="@PersonalInfo.ProfessionalSummary.Short" TextStyle="Radzen.Blazor.TextStyle.Subtitle1" class="rz-mb-0" style="color: var(--rz-sidebar-color);" />
            }
        </RadzenStack>
        <NavMenu />

        <RadzenStack AlignItems="Radzen.AlignItems.Center" Gap="0.5rem" class="rz-py-4 rz-py-lg-6" Style="padding: var(--rz-panel-menu-item-padding);">
            <RadzenText Text="Portfólio v1.0.0" TextStyle="Radzen.Blazor.TextStyle.Caption" TagName="Radzen.Blazor.TagName.P" TextAlign="Radzen.TextAlign.Center" />
            <RadzenStack Orientation="Orientation.Horizontal">
                <WhatsAppIcon Width="20" />
                <GitHubIcon Width="20" />
            </RadzenStack>
        </RadzenStack>
    </RadzenSidebar>
</RadzenLayout>

@code {
    bool sidebarExpanded = true;

    public PersonalInfo PersonalInfo { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        PersonalInfo = await PersonalService.GetPersonalInfoAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var width = await JS.InvokeAsync<int>("getDeviceWidth");
            DeviceService.SetDeviceType(width);
            StateHasChanged();
        }
    }

    void SidebarToggleClick()
    {
        sidebarExpanded = !sidebarExpanded;
    }
}
